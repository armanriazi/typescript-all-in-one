## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.
##
## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore


**/*.rs.bk
**/target/
**/*.profraw
# Generated by Cargo
# will have compiled files and executables
# debug/
series-one-test/
# .tarpaulin.toml
# decov.yml
requirements.txt
# typescript-all-in-one.code-workspace
sample-three-block-error-insufficientinputvalue.json
# .github/workflows/test.yml
# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk
**/library_utils/
# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb
codecov
!doc/*

# Added by cargo

/target

# Mac 
*.DS_Store

# IDEs
.alm
.vscode


# Node rules:
## Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
.grunt

## Dependency directory
## Commenting this out is preferred by some people, see
## https://docs.npmjs.com/misc/faq#should-i-check-my-node_modules-folder-into-git
node_modules

# Book build output
_book

# eBook build output
*.epub
*.mobi
*.pdf
